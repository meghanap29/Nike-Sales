# -*- coding: utf-8 -*-
"""Nike_sales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TKt09uBEScorp4yVdVaQDrbchrOaGkbo
"""

import numpy as np
import pandas as pd

df = pd.read_csv("/content/Nike_Sales_Uncleaned.csv")

# Parse dates with flexible formats
df['Order_Date'] = pd.to_datetime(df['Order_Date'], errors='coerce', dayfirst=True)

# Fill missing size with 'Unknown'
df['Size'] = df['Size'].fillna("Unknown")

# Replace missing discount with 0
df['Discount_Applied'] = df['Discount_Applied'].fillna(0)

# Fill missing units sold with product-level median
df['Units_Sold'] = df.groupby('Product_Name')['Units_Sold'].transform(
    lambda x: x.fillna(x.median())
)

# Fill missing MRP using product or product line averages
df['MRP'] = df.groupby('Product_Name')['MRP'].transform(lambda x: x.fillna(x.mean()))
df['MRP'] = df.groupby('Product_Line')['MRP'].transform(lambda x: x.fillna(x.mean()))

# Recalculate revenue if missing or zero
df['Revenue'] = np.where(
    (df['Revenue'] == 0) | (df['Revenue'].isna()),
    df['Units_Sold'] * df['MRP'] * (1 - df['Discount_Applied']),
    df['Revenue']
)

# Drop rows with missing or invalid dates
df = df[df['Order_Date'].notna()]

# Remove invalid units sold
df = df[df['Units_Sold'] > 0]

# Save the cleaned dataset
df.to_csv("Nike_Sales_SoftCleaned_Final.csv", index=False)

print("âœ… Cleaned dataset saved as 'Nike_Sales_SoftCleaned_Final.csv' with", len(df), "rows.")